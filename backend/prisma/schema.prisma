generator client {
  provider = "prisma-client-js"
  output   = "../src/generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Quiz {
  id        Int        @id @default(autoincrement())
  title     String
  createdAt DateTime   @default(now())
  userId    Int
  user      User       @relation(fields: [userId], references: [id])
  questions Question[]
  games     Game[]
}

model User {
  id             Int           @id @default(autoincrement())
  email          String        @unique
  password       String
  username       String        @unique
  createdAt      DateTime      @default(now())
  profilePicture String
  numberOfGames  Int
  quizzes        Quiz[]
  gamePlayers    GamePlayer[]
  answers        Answer[]
}

model Question {
  id           Int           @id @default(autoincrement())
  title        String
  options      String[]
  correctIndex Int
  quizId       Int
  quiz         Quiz          @relation(fields: [quizId], references: [id])
  gameQuestions GameQuestion[]
}

model Game {
  id             Int           @id @default(autoincrement())
  quizId         Int
  quiz           Quiz          @relation(fields: [quizId], references: [id])
  createdAt      DateTime      @default(now())
  state          GameState
  startedAt      DateTime?
  finishedAt     DateTime?
  round          Int           @default(0)
  gameQuestions  GameQuestion[]
  gamePlayers    GamePlayer[]
}

enum GameState {
  WAITING
  STARTED
  FINISHED
}

model GamePlayer {
  id        Int      @id @default(autoincrement())
  userId    Int
  user      User     @relation(fields: [userId], references: [id])
  gameId    Int
  game      Game     @relation(fields: [gameId], references: [id])
  score     Int      @default(0)
  joinedAt  DateTime @default(now())

  @@unique([userId, gameId], name: "gameId_userId")
}

model GameQuestion {
  id          Int       @id @default(autoincrement())
  gameId      Int
  game        Game      @relation(fields: [gameId], references: [id])
  questionId  Int
  question    Question  @relation(fields: [questionId], references: [id])
  round       Int
  answers     Answer[]
}

model Answer {
  id              Int           @id @default(autoincrement())
  gameQuestionId  Int
  gameQuestion    GameQuestion  @relation(fields: [gameQuestionId], references: [id])
  userId          Int
  user            User          @relation(fields: [userId], references: [id])
  index           Int          
}